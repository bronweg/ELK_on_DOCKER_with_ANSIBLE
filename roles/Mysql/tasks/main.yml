- docker_container:
    name: "{{ node }}"
    image: centos/mariadb
    detach: yes
    #published_ports: 3306:3306
    pull: no
    hostname: "{{ node }}"
    env: MYSQL_ROOT_PASSWORD={{ password }}
    networks:
      - name: elk-network

- add_host:
    name: "{{ item }}"
    ansible_connection: docker
    ansible_user: root
    ansible_become: yes
  changed_when: false
  with_items:
    - mysql-master
    - mysql-slave

- delegate_to: "{{ node }}"
  yum:
    name:
      - mysql-devel
      - python-devel
      - python-setuptools
      - gcc
      - wget
    state: latest

- delegate_to: "{{ node }}"
  get_url:
    url: https://bootstrap.pypa.io/get-pip.py
    dest: /get-pip.py
    mode: 0644

- delegate_to: "{{ node }}"
  command: python /get-pip.py

- delegate_to: "{{ node }}"
  pip:
    name: "{{ item }}"
  with_items:
    - wheel
    - MySQL-python

- delegate_to: "{{ node }}"
  lineinfile:
    path: /etc/my.cnf
    insertbefore: '^\[mysqld_safe\]'
    line: server_id = {{ id }}

- delegate_to: "{{ node }}"
  lineinfile:
    path: /etc/my.cnf
    insertbefore: '^\[mysqld_safe\]'
    line: "{{ item }}"
  with_items:
    - log-bin
    - log-basename={{ node }}
    - binlog-ignore-db=test
    - binlog-ignore-db=information_schema
    - binlog-ignore-db=mysql
    - replicate-ignore-db=test
    - replicate-ignore-db=information_schema
    - replicate-ignore-db=mysql
    - relay-log=mysqld-relay-bin
  when: node == "mysql-master"

- docker_container:
    name: "{{ node }}"
    state: started
    restart: yes

- delegate_to: "{{ node }}"
  mysql_user:
    login_user: root
    login_password: "{{ password }}"
    name: repl
    host: "%"
    password: "{{ password }}"
    priv: "*.*:REPLICATION SLAVE,GRANT"
    state: present
  when: node == "mysql-master"

- delegate_to: mysql-master
  mysql_replication:
    login_user: root
    login_password: "{{ password }}"
    mode: getmaster
  register: replication
  when: node == "mysql-slave"

- add_host:
    name: "replication_value_holder"
    replication_log_file: "{{ replication.File }}"
    replication_log_pos:  "{{ replication.Position }}"
  when: node == "mysql-slave"

- delegate_to: "{{ node }}"
  mysql_replication:
    login_user: root
    login_password: "{{ password }}"
    mode: changemaster
    master_host: mysql-master
    master_user: repl
    master_password: "{{ password }}"
    master_log_file: "{{ hostvars['replication_value_holder']['replication_log_file'] }}"
    master_log_pos:  "{{ hostvars['replication_value_holder']['replication_log_pos'] }}"
  when: node == "mysql-slave"

- delegate_to: "{{ node }}"
  mysql_replication:
    login_user: root
    login_password: "{{ password }}"
    mode: startslave
  when: node == "mysql-slave"
